{
  "api/UnitTest.MyCanvasTests.html": {
    "href": "api/UnitTest.MyCanvasTests.html",
    "title": "Class MyCanvasTests | Documentation",
    "keywords": "Class MyCanvasTests Namespace UnitTest Assembly UnitTest.dll Contains unit tests for the MyCanvas class. These tests validate the canvas operations like moving to positions, drawing, and generating a bitmap. [TestClass] public sealed class MyCanvasTests Inheritance object MyCanvasTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Methods Setup() Sets up the test environment by initializing a new instance of MyCanvas. This method is called before each test method. [TestInitialize] public void Setup() TestDrawToPositionUpdate() Tests the DrawTo(int, int) method to verify that the canvas position is updated correctly after drawing. [TestMethod] public void TestDrawToPositionUpdate() TestMoveTo() Tests the MoveTo(int, int) method to ensure the position is updated correctly. [TestMethod] public void TestMoveTo() TestMultilineProgram() Tests a sequence of canvas operations, including moving, drawing, creating a circle, and writing text. Verifies that the resulting bitmap is not null. [TestMethod] public void TestMultilineProgram()"
  },
  "api/UnitTest.html": {
    "href": "api/UnitTest.html",
    "title": "Namespace UnitTest | Documentation",
    "keywords": "Namespace UnitTest Classes MyCanvasTests Contains unit tests for the MyCanvas class. These tests validate the canvas operations like moving to positions, drawing, and generating a bitmap."
  },
  "api/ase_assignment_demo.AppCommandFactory.html": {
    "href": "api/ase_assignment_demo.AppCommandFactory.html",
    "title": "Class AppCommandFactory | Documentation",
    "keywords": "Class AppCommandFactory Namespace ase_assignment_demo Assembly ase assignment demo.dll The AppCommandFactory class creates instances of specific commands based on the provided command name. It overrides the MakeCommand method of the base CommandFactory class. public class AppCommandFactory : CommandFactory, ICommandFactory Inheritance object CommandFactory AppCommandFactory Implements ICommandFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods MakeCommand(string) Create a specific command based on the provided command name. public override ICommand MakeCommand(string commandType) Parameters commandType string The name of the command. Returns ICommand"
  },
  "api/ase_assignment_demo.AppStoredProgram.html": {
    "href": "api/ase_assignment_demo.AppStoredProgram.html",
    "title": "Class AppStoredProgram | Documentation",
    "keywords": "Class AppStoredProgram Namespace ase_assignment_demo Assembly ase assignment demo.dll public class AppStoredProgram : StoredProgram, IList, ICollection, IEnumerable, ICloneable, IStoredProgram Inheritance object ArrayList StoredProgram AppStoredProgram Implements IList ICollection IEnumerable ICloneable IStoredProgram Inherited Members StoredProgram.GetVariable(int) StoredProgram.FindVariable(Evaluation) StoredProgram.UpdateVariable(string, double) StoredProgram.UpdateVariable(string, bool) StoredProgram.DeleteVariable(string) StoredProgram.IsExpression(string) StoredProgram.EvaluateExpressionWithString(string) StoredProgram.EvaluateExpression(string) StoredProgram.Push(ConditionalCommand) StoredProgram.Pop() StoredProgram.Add(Command) StoredProgram.NextCommand() StoredProgram.ResetProgram() StoredProgram.Commandsleft() StoredProgram.Run() ArrayList.Adapter(IList) ArrayList.Add(object) ArrayList.AddRange(ICollection) ArrayList.BinarySearch(int, int, object, IComparer) ArrayList.BinarySearch(object) ArrayList.BinarySearch(object, IComparer) ArrayList.Clear() ArrayList.Clone() ArrayList.Contains(object) ArrayList.CopyTo(Array) ArrayList.CopyTo(Array, int) ArrayList.CopyTo(int, Array, int, int) ArrayList.FixedSize(ArrayList) ArrayList.FixedSize(IList) ArrayList.GetEnumerator() ArrayList.GetEnumerator(int, int) ArrayList.GetRange(int, int) ArrayList.IndexOf(object) ArrayList.IndexOf(object, int) ArrayList.IndexOf(object, int, int) ArrayList.Insert(int, object) ArrayList.InsertRange(int, ICollection) ArrayList.LastIndexOf(object) ArrayList.LastIndexOf(object, int) ArrayList.LastIndexOf(object, int, int) ArrayList.ReadOnly(ArrayList) ArrayList.ReadOnly(IList) ArrayList.Remove(object) ArrayList.RemoveAt(int) ArrayList.RemoveRange(int, int) ArrayList.Repeat(object, int) ArrayList.Reverse() ArrayList.Reverse(int, int) ArrayList.SetRange(int, ICollection) ArrayList.Sort() ArrayList.Sort(IComparer) ArrayList.Sort(int, int, IComparer) ArrayList.Synchronized(ArrayList) ArrayList.Synchronized(IList) ArrayList.ToArray() ArrayList.ToArray(Type) ArrayList.TrimToSize() ArrayList.Capacity ArrayList.Count ArrayList.IsFixedSize ArrayList.IsReadOnly ArrayList.IsSynchronized ArrayList.this[int] ArrayList.SyncRoot object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppStoredProgram(MyCanvas) public AppStoredProgram(MyCanvas _canvas) Parameters _canvas MyCanvas Fields SyntaxOk public bool SyntaxOk Field Value bool Properties PC public override int PC { get; set; } Property Value int Methods AddMethod(Method) public override void AddMethod(Method M) Parameters M Method AddVariable(Evaluation) public override void AddVariable(Evaluation variable) Parameters variable Evaluation FindVariable(string) public override int FindVariable(string varName) Parameters varName string Returns int GetMethod(string) public override Method GetMethod(string MethodName) Parameters MethodName string Returns Method GetVarValue(string) public override string GetVarValue(string varName) Parameters varName string Returns string GetVariable(string) public override Evaluation GetVariable(string varName) Parameters varName string Returns Evaluation UpdateVariable(string, int) public override void UpdateVariable(string varName, int value) Parameters varName string value int VariableExists(string) public override bool VariableExists(string varName) Parameters varName string Returns bool"
  },
  "api/ase_assignment_demo.CompoundCommandApp.html": {
    "href": "api/ase_assignment_demo.CompoundCommandApp.html",
    "title": "Class CompoundCommandApp | Documentation",
    "keywords": "Class CompoundCommandApp Namespace ase_assignment_demo Assembly ase assignment demo.dll public class CompoundCommandApp Inheritance object CompoundCommandApp Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CorrespondingCommand public object CorrespondingCommand { get; } Property Value object EndLineNumber public object EndLineNumber { get; } Property Value object Program public object Program { get; } Property Value object"
  },
  "api/ase_assignment_demo.Form1.html": {
    "href": "api/ase_assignment_demo.Form1.html",
    "title": "Class Form1 | Documentation",
    "keywords": "Class Form1 Namespace ase_assignment_demo Assembly ase assignment demo.dll Represents the main form of the application where the user can input and run BOOSE programs. public class Form1 : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form Form1 Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.SetVisibleCore(bool) Form.Activate() Form.ActivateMdiChild(Form) Form.AddOwnedForm(Form) Form.AdjustFormScrollbars(bool) Form.Close() Form.CreateAccessibilityInstance() Form.CreateControlsInstance() Form.CreateHandle() Form.DefWndProc(ref Message) Form.ProcessMnemonic(char) Form.CenterToParent() Form.CenterToScreen() Form.LayoutMdi(MdiLayout) Form.OnActivated(EventArgs) Form.OnBackgroundImageChanged(EventArgs) Form.OnBackgroundImageLayoutChanged(EventArgs) Form.OnClosing(CancelEventArgs) Form.OnClosed(EventArgs) Form.OnFormClosing(FormClosingEventArgs) Form.OnFormClosed(FormClosedEventArgs) Form.OnCreateControl() Form.OnDeactivate(EventArgs) Form.OnEnabledChanged(EventArgs) Form.OnEnter(EventArgs) Form.OnFontChanged(EventArgs) Form.OnGotFocus(EventArgs) Form.OnHandleCreated(EventArgs) Form.OnHandleDestroyed(EventArgs) Form.OnHelpButtonClicked(CancelEventArgs) Form.OnLayout(LayoutEventArgs) Form.OnLoad(EventArgs) Form.OnMaximizedBoundsChanged(EventArgs) Form.OnMaximumSizeChanged(EventArgs) Form.OnMinimumSizeChanged(EventArgs) Form.OnInputLanguageChanged(InputLanguageChangedEventArgs) Form.OnInputLanguageChanging(InputLanguageChangingEventArgs) Form.OnVisibleChanged(EventArgs) Form.OnMdiChildActivate(EventArgs) Form.OnMenuStart(EventArgs) Form.OnMenuComplete(EventArgs) Form.OnPaint(PaintEventArgs) Form.OnResize(EventArgs) Form.OnDpiChanged(DpiChangedEventArgs) Form.OnGetDpiScaledSize(int, int, ref Size) Form.OnRightToLeftLayoutChanged(EventArgs) Form.OnShown(EventArgs) Form.OnTextChanged(EventArgs) Form.ProcessCmdKey(ref Message, Keys) Form.ProcessDialogKey(Keys) Form.ProcessDialogChar(char) Form.ProcessKeyPreview(ref Message) Form.ProcessTabKey(bool) Form.RemoveOwnedForm(Form) Form.Select(bool, bool) Form.ScaleMinMaxSize(float, float, bool) Form.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Form.ScaleControl(SizeF, BoundsSpecified) Form.SetBoundsCore(int, int, int, int, BoundsSpecified) Form.SetClientSizeCore(int, int) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.UpdateDefaultButton() Form.OnResizeBegin(EventArgs) Form.OnResizeEnd(EventArgs) Form.OnStyleChanged(EventArgs) Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.WndProc(ref Message) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.CreateParams Form.DefaultImeMode Form.DefaultSize Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximizedBounds Form.MaximumSize Form.MainMenuStrip Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiChildrenMinimizedAnchorBottom Form.MdiParent Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.ShowWithoutActivation Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnMove(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.RescaleConstantsForDpi(int, int) ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Action) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateGraphics() Control.CreateControl() Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DoDragDrop(object, DragDropEffects, Bitmap, Point, bool) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(nint) Control.FromHandle(nint) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Action) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.Invoke<T>(Func<T>) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.LogicalToDeviceUnits(Size) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDataContextChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentDataContextChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnLocationChanged(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseDown(MouseEventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(nint, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.DataContext Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsAncestorSiteInDesignMode Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DataContextChanged Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.Container Component.DesignMode Component.Events Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Form1() Initializes a new instance of the Form1 class. Initializes the form components and sets up the canvas for drawing. public Form1() Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false."
  },
  "api/ase_assignment_demo.IncrementVariableCommand.html": {
    "href": "api/ase_assignment_demo.IncrementVariableCommand.html",
    "title": "Class IncrementVariableCommand | Documentation",
    "keywords": "Class IncrementVariableCommand Namespace ase_assignment_demo Assembly ase assignment demo.dll public class IncrementVariableCommand : Command, ICommand Inheritance object Command IncrementVariableCommand Implements ICommand Inherited Members Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods CheckParameters(string[]) Override the CheckParameters method to validate parameters for IncrementVariableCommand. public override void CheckParameters(string[] parameter) Parameters parameter string[] Execute() public override void Execute()"
  },
  "api/ase_assignment_demo.MyArray.html": {
    "href": "api/ase_assignment_demo.MyArray.html",
    "title": "Class MyArray | Documentation",
    "keywords": "Class MyArray Namespace ase_assignment_demo Assembly ase assignment demo.dll My Array class that extends Array class from BOOSE. public class MyArray : Array, ICommand Inheritance object Command Evaluation Array MyArray Implements ICommand Derived MyPeek MyPoke Inherited Members Array.PEEK Array.POKE Array.type Array.rows Array.columns Array.valueInt Array.valueReal Array.intArray Array.realArray Array.pokeValue Array.peekVar Array.rowS Array.columnS Array.row Array.column Array.ArrayRestrictions() Array.ReduceRestrictionCounter() Array.CheckParameters(string[]) Array.ProcessArrayParametersCompile(bool) Array.ProcessArrayParametersExecute(bool) Array.SetIntArray(int, int, int) Array.SetRealArray(double, int, int) Array.GetIntArray(int, int) Array.GetRealArray(int, int) Array.Rows Array.Columns Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MyArray() Constructor that calls ReduceRestrictionCounter() to bypass array related restrictions. public MyArray() Methods Compile() Compiles array by invoking base implementation. public override void Compile() Execute() Excutes the array logic by invoking base class implementation. public override void Execute()"
  },
  "api/ase_assignment_demo.MyBoolean.html": {
    "href": "api/ase_assignment_demo.MyBoolean.html",
    "title": "Class MyBoolean | Documentation",
    "keywords": "Class MyBoolean Namespace ase_assignment_demo Assembly ase assignment demo.dll public class MyBoolean : Boolean, ICommand Inheritance object Command Evaluation Boolean MyBoolean Implements ICommand Inherited Members Boolean.Compile() Boolean.Execute() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Restrictions() public override void Restrictions()"
  },
  "api/ase_assignment_demo.MyCanvas.html": {
    "href": "api/ase_assignment_demo.MyCanvas.html",
    "title": "Class MyCanvas | Documentation",
    "keywords": "Class MyCanvas Namespace ase_assignment_demo Assembly ase assignment demo.dll public class MyCanvas : ICanvas Inheritance object MyCanvas Implements ICanvas Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MyCanvas() public MyCanvas() MyCanvas(int, int) public MyCanvas(int width, int height) Parameters width int height int Properties PenColour public object PenColour { get; set; } Property Value object Xpos public int Xpos { get; set; } Property Value int Ypos public int Ypos { get; set; } Property Value int Methods Circle(int, bool) public void Circle(int radius, bool filled) Parameters radius int filled bool Clear() public void Clear() DrawTo(int, int) public void DrawTo(int x, int y) Parameters x int y int MoveTo(int, int) public void MoveTo(int x, int y) Parameters x int y int Rect(int, int, bool) public void Rect(int width, int height, bool filled) Parameters width int height int filled bool Reset() public void Reset() Set(int, int) public void Set(int width, int height) Parameters width int height int SetColour(int, int, int) public void SetColour(int red, int green, int blue) Parameters red int green int blue int Tri(int, int) public void Tri(int width, int height) Parameters width int height int WriteText(string) public void WriteText(string text) Parameters text string getBitmap() public object getBitmap() Returns object"
  },
  "api/ase_assignment_demo.MyCircle.html": {
    "href": "api/ase_assignment_demo.MyCircle.html",
    "title": "Class MyCircle | Documentation",
    "keywords": "Class MyCircle Namespace ase_assignment_demo Assembly ase assignment demo.dll Represents a command to draw a circle on a canvas. public class MyCircle : CommandOneParameter, ICommand Inheritance object Command CanvasCommand CommandOneParameter MyCircle Implements ICommand Inherited Members CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MyCircle() Initializes a new instance of the MyCircle class. public MyCircle() MyCircle(Canvas, int) Initializes a new instance of the MyCircle class with a specified canvas and radius. public MyCircle(Canvas canvas, int radius) Parameters canvas Canvas The canvas on which the circle will be drawn. radius int The radius of the circle. Methods CheckParameters(string[]) Validates the parameters for the circle command. public override void CheckParameters(string[] parameterList) Parameters parameterList string[] The list of parameters passed to the command. Exceptions CommandException Thrown when the parameter list is invalid. Execute() Executes the command to draw a circle on the canvas. public override void Execute()"
  },
  "api/ase_assignment_demo.MyClear.html": {
    "href": "api/ase_assignment_demo.MyClear.html",
    "title": "Class MyClear | Documentation",
    "keywords": "Class MyClear Namespace ase_assignment_demo Assembly ase assignment demo.dll Represents a command to clear all elements from the canvas. public class MyClear : CommandOneParameter, ICommand Inheritance object Command CanvasCommand CommandOneParameter MyClear Implements ICommand Inherited Members CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MyClear() Initializes a new instance of the MyClear class. public MyClear() MyClear(Canvas) Initializes a new instance of the MyClear class with the specified canvas. public MyClear(Canvas c) Parameters c Canvas The canvas to clear. Methods CheckParameters(string[]) Validates the parameters for the clear command. public override void CheckParameters(string[] parameterList) Parameters parameterList string[] The list of parameters to validate. Remarks No parameters are required for this command, so no validation is performed. Execute() Executes the clear command, removing all elements from the canvas. public override void Execute()"
  },
  "api/ase_assignment_demo.MyFor.html": {
    "href": "api/ase_assignment_demo.MyFor.html",
    "title": "Class MyFor | Documentation",
    "keywords": "Class MyFor Namespace ase_assignment_demo Assembly ase assignment demo.dll MyFor class that extends for class from BOOSE using Singleton design patterns. public class MyFor : For, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand For MyFor Implements ICommand Inherited Members For.LoopControlV For.From For.To For.Step ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.Restrictions() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MyFor() private constructor to enforce Singleton pattern. public MyFor() Fields _instance The Singleton instance of MyFor. public static readonly Lazy<MyFor> _instance Field Value Lazy<MyFor> Properties Instance property to access the Singleton instance. public static MyFor Instance { get; } Property Value MyFor Methods Compile() Override Compile() method that calls the base implementation. public override void Compile() Execute() Override Execute() method that calls the base implementation. public override void Execute()"
  },
  "api/ase_assignment_demo.MyIf.html": {
    "href": "api/ase_assignment_demo.MyIf.html",
    "title": "Class MyIf | Documentation",
    "keywords": "Class MyIf Namespace ase_assignment_demo Assembly ase assignment demo.dll MyIf class that extends ConditionalCommand from BOOSE. public class MyIf : ConditionalCommand, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand MyIf Implements ICommand Inherited Members ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.Restrictions() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MyIf() Constructor that is used to bypass restrictions public MyIf() Methods Compile() Compile code by invoking base class implementation. public override void Compile() Execute() Execute code logic by invoking base class implementation. public override void Execute()"
  },
  "api/ase_assignment_demo.MyInt.html": {
    "href": "api/ase_assignment_demo.MyInt.html",
    "title": "Class MyInt | Documentation",
    "keywords": "Class MyInt Namespace ase_assignment_demo Assembly ase assignment demo.dll MyInt class extends the default Int class in BOOSE. public class MyInt : Int, ICommand Inheritance object Command Evaluation Int MyInt Implements ICommand Inherited Members Int.Compile() Int.Execute() Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MyInt() Constructor that calls the Restrictions method to bypass restrictions. public MyInt() Methods Restrictions() Overrides Restrictions to bypass variable restrictions. public override void Restrictions()"
  },
  "api/ase_assignment_demo.MyMethod.html": {
    "href": "api/ase_assignment_demo.MyMethod.html",
    "title": "Class MyMethod | Documentation",
    "keywords": "Class MyMethod Namespace ase_assignment_demo Assembly ase assignment demo.dll public class MyMethod : Method, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand CompoundCommand Method MyMethod Implements ICommand Inherited Members Method.CheckParameters(string[]) Method.LocalVariables Method.MethodName Method.Type CompoundCommand.ReduceRestrictions() CompoundCommand.CorrespondingCommand ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.Restrictions() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MyMethod() public MyMethod() Methods Compile() public override void Compile() Execute() public override void Execute()"
  },
  "api/ase_assignment_demo.MyPeek.html": {
    "href": "api/ase_assignment_demo.MyPeek.html",
    "title": "Class MyPeek | Documentation",
    "keywords": "Class MyPeek Namespace ase_assignment_demo Assembly ase assignment demo.dll public class MyPeek : MyArray, ICommand Inheritance object Command Evaluation Array MyArray MyPeek Implements ICommand Inherited Members Array.PEEK Array.POKE Array.type Array.rows Array.columns Array.valueInt Array.valueReal Array.intArray Array.realArray Array.pokeValue Array.peekVar Array.rowS Array.columnS Array.row Array.column Array.ArrayRestrictions() Array.ReduceRestrictionCounter() Array.ProcessArrayParametersCompile(bool) Array.ProcessArrayParametersExecute(bool) Array.SetIntArray(int, int, int) Array.SetRealArray(double, int, int) Array.GetIntArray(int, int) Array.GetRealArray(int, int) Array.Rows Array.Columns Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MyPeek() public MyPeek() Properties IntValue public int IntValue { get; } Property Value int MyPeekValue public string MyPeekValue { get; } Property Value string MyRealValue public int MyRealValue { get; } Property Value int MypeekValue public string MypeekValue { get; } Property Value string PypeekValue public string PypeekValue { get; } Property Value string Methods CheckParameters(string[]) public override void CheckParameters(string[] parameters) Parameters parameters string[] Compile() Compiles array by invoking base implementation. public override void Compile() Execute() Excutes the array logic by invoking base class implementation. public override void Execute()"
  },
  "api/ase_assignment_demo.MyPoke.html": {
    "href": "api/ase_assignment_demo.MyPoke.html",
    "title": "Class MyPoke | Documentation",
    "keywords": "Class MyPoke Namespace ase_assignment_demo Assembly ase assignment demo.dll public class MyPoke : MyArray, ICommand Inheritance object Command Evaluation Array MyArray MyPoke Implements ICommand Inherited Members Array.PEEK Array.POKE Array.type Array.rows Array.columns Array.valueInt Array.valueReal Array.intArray Array.realArray Array.pokeValue Array.peekVar Array.rowS Array.columnS Array.row Array.column Array.ArrayRestrictions() Array.ReduceRestrictionCounter() Array.ProcessArrayParametersCompile(bool) Array.ProcessArrayParametersExecute(bool) Array.SetIntArray(int, int, int) Array.SetRealArray(double, int, int) Array.GetIntArray(int, int) Array.GetRealArray(int, int) Array.Rows Array.Columns Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MyPoke() public MyPoke() Methods CheckParameters(string[]) public override void CheckParameters(string[] parameter) Parameters parameter string[] Compile() Compiles array by invoking base implementation. public override void Compile() Execute() Excutes the array logic by invoking base class implementation. public override void Execute() Set(StoredProgram, string) public override void Set(StoredProgram program, string paramsList) Parameters program StoredProgram paramsList string"
  },
  "api/ase_assignment_demo.MyReal.html": {
    "href": "api/ase_assignment_demo.MyReal.html",
    "title": "Class MyReal | Documentation",
    "keywords": "Class MyReal Namespace ase_assignment_demo Assembly ase assignment demo.dll MyReal class extends the default Real class in BOOSE. public class MyReal : Real, ICommand Inheritance object Command Evaluation Real MyReal Implements ICommand Inherited Members Real.Value Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MyReal() Constructor that calls the Restrictions method to bypass restrictions. public MyReal() Methods Compile() Overrides the compile method to include the base implementation. public override void Compile() Execute() Overrides the execute method to include the base implementation. public override void Execute() Restrictions() Overrides the Restrictions method. public override void Restrictions()"
  },
  "api/ase_assignment_demo.MyTriangle.html": {
    "href": "api/ase_assignment_demo.MyTriangle.html",
    "title": "Class MyTriangle | Documentation",
    "keywords": "Class MyTriangle Namespace ase_assignment_demo Assembly ase assignment demo.dll Represents a command to draw a triangle on a canvas. public class MyTriangle : CommandTwoParameters, ICommand Inheritance object Command CanvasCommand CommandOneParameter CommandTwoParameters MyTriangle Implements ICommand Inherited Members CommandTwoParameters.param2 CommandTwoParameters.param2unprocessed CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MyTriangle() Initializes a new instance of the MyTriangle class. public MyTriangle() MyTriangle(Canvas, int, int) Initializes a new instance of the MyTriangle class with the specified canvas, base length, and height. public MyTriangle(Canvas c, int baseLength, int height) Parameters c Canvas The canvas to draw the triangle on. baseLength int The base length of the triangle. height int The height of the triangle. Methods CheckParameters(string[]) Validates the parameters for the triangle command. public override void CheckParameters(string[] parameterList) Parameters parameterList string[] The list of parameters to validate. Exceptions CommandException Thrown when the parameter list is invalid or incomplete. Execute() Executes the command to draw a triangle on the canvas. public override void Execute()"
  },
  "api/ase_assignment_demo.MyWhile.html": {
    "href": "api/ase_assignment_demo.MyWhile.html",
    "title": "Class MyWhile | Documentation",
    "keywords": "Class MyWhile Namespace ase_assignment_demo Assembly ase assignment demo.dll MyWhile class that extend parent While class from BOOSE. public class MyWhile : While, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand CompoundCommand While MyWhile Implements ICommand Inherited Members CompoundCommand.CheckParameters(string[]) CompoundCommand.Compile() CompoundCommand.CorrespondingCommand ConditionalCommand.endLineNumber ConditionalCommand.Execute() ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.Restrictions() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MyWhile() Constructor that defines ReduceRestrictions() method to bypass restrictions. public MyWhile() Methods ReduceRestrictions() protected void ReduceRestrictions()"
  },
  "api/ase_assignment_demo.html": {
    "href": "api/ase_assignment_demo.html",
    "title": "Namespace ase_assignment_demo | Documentation",
    "keywords": "Namespace ase_assignment_demo Classes AppCommandFactory The AppCommandFactory class creates instances of specific commands based on the provided command name. It overrides the MakeCommand method of the base CommandFactory class. AppStoredProgram CompoundCommandApp Form1 Represents the main form of the application where the user can input and run BOOSE programs. IncrementVariableCommand MyArray My Array class that extends Array class from BOOSE. MyBoolean MyCanvas MyCircle Represents a command to draw a circle on a canvas. MyClear Represents a command to clear all elements from the canvas. MyFor MyFor class that extends for class from BOOSE using Singleton design patterns. MyIf MyIf class that extends ConditionalCommand from BOOSE. MyInt MyInt class extends the default Int class in BOOSE. MyMethod MyPeek MyPoke MyReal MyReal class extends the default Real class in BOOSE. MyTriangle Represents a command to draw a triangle on a canvas. MyWhile MyWhile class that extend parent While class from BOOSE."
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | Documentation",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | Documentation",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | Documentation",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}